name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test || echo "No tests configured yet"

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-windows
          path: src-tauri/target/release/bundle/msi/
          retention-days: 30

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-macos
          path: src-tauri/target/release/bundle/dmg/
          retention-days: 30

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libssl-dev \
            libdbus-1-dev \
            libx11-dev \
            libxcomposite-dev \
            libxcursor-dev \
            libxdamage-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxrandr-dev \
            libxrender-dev \
            libxss-dev \
            libxtst-dev \
            pkg-config \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libgdk-pixbuf2.0-dev \
            libgirepository1.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-linux
          path: src-tauri/target/release/bundle/appimage/
          retention-days: 30

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        id: android
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          ndk: 26.1.10909125

      - name: Export NDK environment variables
        run: |
          NDK_PATH="${ANDROID_NDK_ROOT:-$ANDROID_NDK_LATEST_HOME}"
          if [ -z "$NDK_PATH" ] || [ ! -d "$NDK_PATH" ]; then
            echo "NDK not found. Current env:"
            env | grep NDK || true
            exit 1
          fi

          echo "ANDROID_NDK_HOME=$NDK_PATH" >> "$GITHUB_ENV"
          echo "NDK_HOME=$NDK_PATH"          >> "$GITHUB_ENV"
          echo "NDK path set to $NDK_PATH"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name: Install JS dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Setup Android environment variables
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: Init Tauri Android project
        run: |
          npm install -g @tauri-apps/cli
          
          echo "Current directory structure:"
          ls -la
          echo "src-tauri directory structure:"
          ls -la src-tauri/
          
          if [ -d "src-tauri/gen/android" ]; then
            echo "Removing existing Android project directory..."
            rm -rf src-tauri/gen/android
          fi
          
          echo "Initializing Android project..."
          npx tauri android init --ci
          
          echo "Android project initialization completed"
          echo "Checking generated files:"
          find src-tauri/gen -name "*" -type f | head -20 || echo "No files found in gen directory"

      - name: Verify and setup Android project structure
        run: |
          echo "Checking Android project structure..."
          ls -la src-tauri/gen/ || echo "gen directory does not exist"
          
          if [ -d "src-tauri/gen/android" ]; then
            echo "Android project directory exists"
            ls -la src-tauri/gen/android/
            find src-tauri/gen/android -name "*.gradle" -o -name "AndroidManifest.xml" | head -10
            
            if [ -d "src-tauri/gen/android/app/src/main/java/com/jieqibox/app" ]; then
              echo "Package directory structure is correct"
            else
              echo "Package directory structure is incorrect, creating correct structure..."
              mkdir -p src-tauri/gen/android/app/src/main/java/com/jieqibox/app
            fi
          else
            echo "Android project directory does not exist, creating it..."
            mkdir -p src-tauri/gen/android
            echo "Created Android project directory"
          fi
          
          echo "Checking Tauri Android configuration..."
          if [ -f "src-tauri/tauri.conf.json" ]; then
            echo "Tauri config exists"
            grep -A 5 -B 5 "android" src-tauri/tauri.conf.json || echo "No android config found"
          fi
          
          echo "Environment variables:"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "JAVA_HOME: $JAVA_HOME"

      - name: Build Tauri Android app
        run: |
          echo "Starting Android build..."
          npx tauri android build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-android

          path: |
            src-tauri/target/android/**/*.apk
          retention-days: 30


  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux, build-android]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            jieqibox-windows/*.msi
            jieqibox-macos/*.dmg
            jieqibox-linux/*.AppImage
            jieqibox-android/**/*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
