name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test || echo "No tests configured yet"

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-windows
          path: src-tauri/target/release/bundle/msi/
          retention-days: 30

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build Tauri app
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-macos
          path: src-tauri/target/release/bundle/dmg/
          retention-days: 30

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          ndk: 26.1.10909125
          build-tools: '34.0.0'

      - name: Export NDK environment variables
        run: |
          NDK_PATH="${ANDROID_NDK_ROOT:-$ANDROID_NDK_LATEST_HOME}"
          echo "ANDROID_NDK_HOME=$NDK_PATH" >> "$GITHUB_ENV"
          echo "NDK_HOME=$NDK_PATH"          >> "$GITHUB_ENV"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android, armv7-linux-androideabi, x86_64-linux-android, i686-linux-android

      - name: Install JS dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Init Tauri Android project
        run: |
          npm install -g @tauri-apps/cli

      - name: Build Tauri Android app (unsigned)
        run: npx tauri android build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Manually sign the APK
        run: |
          KEYSTORE_PATH=$RUNNER_TEMP/keystore.jks
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $KEYSTORE_PATH
          echo "Keystore file created at $KEYSTORE_PATH"

          UNSIGNED_APK_PATH=$(find src-tauri/gen/android/app/build/outputs/apk -type f -name "*-unsigned.apk" | head -n 1)
          if [ -z "$UNSIGNED_APK_PATH" ]; then
            echo "::error::Unsigned APK not found!"
            find src-tauri/gen/android/app/build/outputs/apk -type f -name "*.apk"
            exit 1
          fi
          echo "Found unsigned APK at: $UNSIGNED_APK_PATH"

          SIGNED_APK_PATH=$(echo "$UNSIGNED_APK_PATH" | sed 's/-unsigned//')
          echo "Signed APK will be saved to: $SIGNED_APK_PATH"

          $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
            --ks $KEYSTORE_PATH \
            --ks-key-alias "${{ secrets.ANDROID_KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.ANDROID_KEY_PASSWORD }}" \
            --key-pass pass:"${{ secrets.ANDROID_KEY_PASSWORD }}" \
            --out "$SIGNED_APK_PATH" \
            "$UNSIGNED_APK_PATH"

          echo "APK signing process completed."

          $ANDROID_HOME/build-tools/34.0.0/apksigner verify "$SIGNED_APK_PATH"
          echo "APK signature verified successfully."

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jieqibox-android
          path: |
            src-tauri/gen/android/app/build/outputs/apk/**/release/*.apk
            !src-tauri/gen/android/app/build/outputs/apk/**/release/*-unsigned.apk
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-android]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            jieqibox-windows/*.msi
            jieqibox-macos/*.dmg
            jieqibox-linux/*.AppImage
            jieqibox-android/**/*.apk
            jieqibox-android/**/*.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
